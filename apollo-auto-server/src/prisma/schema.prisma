generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  account      String         @unique
  password     String
  displayName  String
  timezone     String         @default("Asia/Taipei")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Token        Token[]
  Job          Job[]
  ApolloCookie ApolloCookie[]
}

model Token {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model ApolloCookie {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  value     String // JSON string
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

enum JobType {
  CHECK_IN
  CHECK_OUT
}

enum JobStatus {
  SUCCESS
  FAILED
  SKIPPED
  PENDING
}

model Job {
  id                  Int        @id @default(autoincrement())
  userId              Int
  type                JobType
  startAt             DateTime
  endAt               DateTime?
  data                String? // JSON string
  nextExecutionAt     DateTime?
  lastExecutedAt      DateTime?
  lastExecutionStatus JobStatus?
  lastExecutionResult String? // JSON string
  isActive            Boolean    @default(true)
  expiredAt           DateTime?
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, type])
}
